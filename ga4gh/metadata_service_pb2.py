# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ga4gh/metadata_service.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from ga4gh import metadata_pb2 as ga4gh_dot_metadata__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='ga4gh/metadata_service.proto',
  package='ga4gh',
  syntax='proto3',
  serialized_pb=_b('\n\x1cga4gh/metadata_service.proto\x12\x05ga4gh\x1a\x14ga4gh/metadata.proto\">\n\x15SearchDatasetsRequest\x12\x11\n\tpage_size\x18\x01 \x01(\x05\x12\x12\n\npage_token\x18\x02 \x01(\t\"S\n\x16SearchDatasetsResponse\x12 \n\x08\x64\x61tasets\x18\x01 \x03(\x0b\x32\x0e.ga4gh.Dataset\x12\x17\n\x0fnext_page_token\x18\x02 \x01(\t\"\'\n\x11GetDatasetRequest\x12\x12\n\ndataset_id\x18\x01 \x01(\t2\x98\x01\n\x0fMetadataService\x12M\n\x0eSearchDatasets\x12\x1c.ga4gh.SearchDatasetsRequest\x1a\x1d.ga4gh.SearchDatasetsResponse\x12\x36\n\nGetDataset\x12\x18.ga4gh.GetDatasetRequest\x1a\x0e.ga4gh.Datasetb\x06proto3')
  ,
  dependencies=[ga4gh_dot_metadata__pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_SEARCHDATASETSREQUEST = _descriptor.Descriptor(
  name='SearchDatasetsRequest',
  full_name='ga4gh.SearchDatasetsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='page_size', full_name='ga4gh.SearchDatasetsRequest.page_size', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='page_token', full_name='ga4gh.SearchDatasetsRequest.page_token', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=61,
  serialized_end=123,
)


_SEARCHDATASETSRESPONSE = _descriptor.Descriptor(
  name='SearchDatasetsResponse',
  full_name='ga4gh.SearchDatasetsResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='datasets', full_name='ga4gh.SearchDatasetsResponse.datasets', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='next_page_token', full_name='ga4gh.SearchDatasetsResponse.next_page_token', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=125,
  serialized_end=208,
)


_GETDATASETREQUEST = _descriptor.Descriptor(
  name='GetDatasetRequest',
  full_name='ga4gh.GetDatasetRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='dataset_id', full_name='ga4gh.GetDatasetRequest.dataset_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=210,
  serialized_end=249,
)

_SEARCHDATASETSRESPONSE.fields_by_name['datasets'].message_type = ga4gh_dot_metadata__pb2._DATASET
DESCRIPTOR.message_types_by_name['SearchDatasetsRequest'] = _SEARCHDATASETSREQUEST
DESCRIPTOR.message_types_by_name['SearchDatasetsResponse'] = _SEARCHDATASETSRESPONSE
DESCRIPTOR.message_types_by_name['GetDatasetRequest'] = _GETDATASETREQUEST

SearchDatasetsRequest = _reflection.GeneratedProtocolMessageType('SearchDatasetsRequest', (_message.Message,), dict(
  DESCRIPTOR = _SEARCHDATASETSREQUEST,
  __module__ = 'ga4gh.metadata_service_pb2'
  # @@protoc_insertion_point(class_scope:ga4gh.SearchDatasetsRequest)
  ))
_sym_db.RegisterMessage(SearchDatasetsRequest)

SearchDatasetsResponse = _reflection.GeneratedProtocolMessageType('SearchDatasetsResponse', (_message.Message,), dict(
  DESCRIPTOR = _SEARCHDATASETSRESPONSE,
  __module__ = 'ga4gh.metadata_service_pb2'
  # @@protoc_insertion_point(class_scope:ga4gh.SearchDatasetsResponse)
  ))
_sym_db.RegisterMessage(SearchDatasetsResponse)

GetDatasetRequest = _reflection.GeneratedProtocolMessageType('GetDatasetRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETDATASETREQUEST,
  __module__ = 'ga4gh.metadata_service_pb2'
  # @@protoc_insertion_point(class_scope:ga4gh.GetDatasetRequest)
  ))
_sym_db.RegisterMessage(GetDatasetRequest)


import grpc
from grpc.beta import implementations as beta_implementations
from grpc.beta import interfaces as beta_interfaces
from grpc.framework.common import cardinality
from grpc.framework.interfaces.face import utilities as face_utilities


class MetadataServiceStub(object):

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.SearchDatasets = channel.unary_unary(
        '/ga4gh.MetadataService/SearchDatasets',
        request_serializer=SearchDatasetsRequest.SerializeToString,
        response_deserializer=SearchDatasetsResponse.FromString,
        )
    self.GetDataset = channel.unary_unary(
        '/ga4gh.MetadataService/GetDataset',
        request_serializer=GetDatasetRequest.SerializeToString,
        response_deserializer=ga4gh_dot_metadata__pb2.Dataset.FromString,
        )


class MetadataServiceServicer(object):

  def SearchDatasets(self, request, context):
    """Gets a list of `Dataset` matching the search criteria.

    `POST /datasets/search` must accept a JSON version of
    `SearchDatasetsRequest` as the post body and will return a JSON
    version of `SearchDatasetsResponse`.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetDataset(self, request, context):
    """Gets a `Dataset` by ID.

    `GET /datasets/{dataset_id}` will return a JSON version of
    `Dataset`.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_MetadataServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'SearchDatasets': grpc.unary_unary_rpc_method_handler(
          servicer.SearchDatasets,
          request_deserializer=SearchDatasetsRequest.FromString,
          response_serializer=SearchDatasetsResponse.SerializeToString,
      ),
      'GetDataset': grpc.unary_unary_rpc_method_handler(
          servicer.GetDataset,
          request_deserializer=GetDatasetRequest.FromString,
          response_serializer=ga4gh_dot_metadata__pb2.Dataset.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'ga4gh.MetadataService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class BetaMetadataServiceServicer(object):
  def SearchDatasets(self, request, context):
    """Gets a list of `Dataset` matching the search criteria.

    `POST /datasets/search` must accept a JSON version of
    `SearchDatasetsRequest` as the post body and will return a JSON
    version of `SearchDatasetsResponse`.
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def GetDataset(self, request, context):
    """Gets a `Dataset` by ID.

    `GET /datasets/{dataset_id}` will return a JSON version of
    `Dataset`.
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


class BetaMetadataServiceStub(object):
  def SearchDatasets(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    """Gets a list of `Dataset` matching the search criteria.

    `POST /datasets/search` must accept a JSON version of
    `SearchDatasetsRequest` as the post body and will return a JSON
    version of `SearchDatasetsResponse`.
    """
    raise NotImplementedError()
  SearchDatasets.future = None
  def GetDataset(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    """Gets a `Dataset` by ID.

    `GET /datasets/{dataset_id}` will return a JSON version of
    `Dataset`.
    """
    raise NotImplementedError()
  GetDataset.future = None


def beta_create_MetadataService_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
  request_deserializers = {
    ('ga4gh.MetadataService', 'GetDataset'): GetDatasetRequest.FromString,
    ('ga4gh.MetadataService', 'SearchDatasets'): SearchDatasetsRequest.FromString,
  }
  response_serializers = {
    ('ga4gh.MetadataService', 'GetDataset'): ga4gh_dot_metadata__pb2.Dataset.SerializeToString,
    ('ga4gh.MetadataService', 'SearchDatasets'): SearchDatasetsResponse.SerializeToString,
  }
  method_implementations = {
    ('ga4gh.MetadataService', 'GetDataset'): face_utilities.unary_unary_inline(servicer.GetDataset),
    ('ga4gh.MetadataService', 'SearchDatasets'): face_utilities.unary_unary_inline(servicer.SearchDatasets),
  }
  server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
  return beta_implementations.server(method_implementations, options=server_options)


def beta_create_MetadataService_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
  request_serializers = {
    ('ga4gh.MetadataService', 'GetDataset'): GetDatasetRequest.SerializeToString,
    ('ga4gh.MetadataService', 'SearchDatasets'): SearchDatasetsRequest.SerializeToString,
  }
  response_deserializers = {
    ('ga4gh.MetadataService', 'GetDataset'): ga4gh_dot_metadata__pb2.Dataset.FromString,
    ('ga4gh.MetadataService', 'SearchDatasets'): SearchDatasetsResponse.FromString,
  }
  cardinalities = {
    'GetDataset': cardinality.Cardinality.UNARY_UNARY,
    'SearchDatasets': cardinality.Cardinality.UNARY_UNARY,
  }
  stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
  return beta_implementations.dynamic_stub(channel, 'ga4gh.MetadataService', cardinalities, options=stub_options)
# @@protoc_insertion_point(module_scope)
