# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ga4gh/bio_metadata_service.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from ga4gh import bio_metadata_pb2 as ga4gh_dot_bio__metadata__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='ga4gh/bio_metadata_service.proto',
  package='ga4gh',
  syntax='proto3',
  serialized_pb=_b('\n ga4gh/bio_metadata_service.proto\x12\x05ga4gh\x1a\x18ga4gh/bio_metadata.proto\"c\n\x18SearchIndividualsRequest\x12\x12\n\ndataset_id\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x11\n\tpage_size\x18\x03 \x01(\x05\x12\x12\n\npage_token\x18\x04 \x01(\t\"-\n\x14GetIndividualRequest\x12\x15\n\rindividual_id\x18\x01 \x01(\t\",\n\x13GetBioSampleRequest\x12\x15\n\rbio_sample_id\x18\x01 \x01(\t\"\\\n\x19SearchIndividualsResponse\x12&\n\x0bindividuals\x18\x01 \x03(\x0b\x32\x11.ga4gh.Individual\x12\x17\n\x0fnext_page_token\x18\x02 \x01(\t\"y\n\x17SearchBioSamplesRequest\x12\x12\n\ndataset_id\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x15\n\rindividual_id\x18\x03 \x01(\t\x12\x11\n\tpage_size\x18\x04 \x01(\x05\x12\x12\n\npage_token\x18\x05 \x01(\t\"Y\n\x18SearchBioSamplesResponse\x12$\n\nbiosamples\x18\x01 \x03(\x0b\x32\x10.ga4gh.BioSample\x12\x17\n\x0fnext_page_token\x18\x02 \x01(\t2\xc0\x02\n\x12\x42ioMetadataService\x12V\n\x11SearchIndividuals\x12\x1f.ga4gh.SearchIndividualsRequest\x1a .ga4gh.SearchIndividualsResponse\x12S\n\x10SearchBioSamples\x12\x1e.ga4gh.SearchBioSamplesRequest\x1a\x1f.ga4gh.SearchBioSamplesResponse\x12?\n\rGetIndividual\x12\x1b.ga4gh.GetIndividualRequest\x1a\x11.ga4gh.Individual\x12<\n\x0cGetBioSample\x12\x1a.ga4gh.GetBioSampleRequest\x1a\x10.ga4gh.BioSampleb\x06proto3')
  ,
  dependencies=[ga4gh_dot_bio__metadata__pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_SEARCHINDIVIDUALSREQUEST = _descriptor.Descriptor(
  name='SearchIndividualsRequest',
  full_name='ga4gh.SearchIndividualsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='dataset_id', full_name='ga4gh.SearchIndividualsRequest.dataset_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='name', full_name='ga4gh.SearchIndividualsRequest.name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='page_size', full_name='ga4gh.SearchIndividualsRequest.page_size', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='page_token', full_name='ga4gh.SearchIndividualsRequest.page_token', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=69,
  serialized_end=168,
)


_GETINDIVIDUALREQUEST = _descriptor.Descriptor(
  name='GetIndividualRequest',
  full_name='ga4gh.GetIndividualRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='individual_id', full_name='ga4gh.GetIndividualRequest.individual_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=170,
  serialized_end=215,
)


_GETBIOSAMPLEREQUEST = _descriptor.Descriptor(
  name='GetBioSampleRequest',
  full_name='ga4gh.GetBioSampleRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='bio_sample_id', full_name='ga4gh.GetBioSampleRequest.bio_sample_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=217,
  serialized_end=261,
)


_SEARCHINDIVIDUALSRESPONSE = _descriptor.Descriptor(
  name='SearchIndividualsResponse',
  full_name='ga4gh.SearchIndividualsResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='individuals', full_name='ga4gh.SearchIndividualsResponse.individuals', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='next_page_token', full_name='ga4gh.SearchIndividualsResponse.next_page_token', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=263,
  serialized_end=355,
)


_SEARCHBIOSAMPLESREQUEST = _descriptor.Descriptor(
  name='SearchBioSamplesRequest',
  full_name='ga4gh.SearchBioSamplesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='dataset_id', full_name='ga4gh.SearchBioSamplesRequest.dataset_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='name', full_name='ga4gh.SearchBioSamplesRequest.name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='individual_id', full_name='ga4gh.SearchBioSamplesRequest.individual_id', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='page_size', full_name='ga4gh.SearchBioSamplesRequest.page_size', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='page_token', full_name='ga4gh.SearchBioSamplesRequest.page_token', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=357,
  serialized_end=478,
)


_SEARCHBIOSAMPLESRESPONSE = _descriptor.Descriptor(
  name='SearchBioSamplesResponse',
  full_name='ga4gh.SearchBioSamplesResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='biosamples', full_name='ga4gh.SearchBioSamplesResponse.biosamples', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='next_page_token', full_name='ga4gh.SearchBioSamplesResponse.next_page_token', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=480,
  serialized_end=569,
)

_SEARCHINDIVIDUALSRESPONSE.fields_by_name['individuals'].message_type = ga4gh_dot_bio__metadata__pb2._INDIVIDUAL
_SEARCHBIOSAMPLESRESPONSE.fields_by_name['biosamples'].message_type = ga4gh_dot_bio__metadata__pb2._BIOSAMPLE
DESCRIPTOR.message_types_by_name['SearchIndividualsRequest'] = _SEARCHINDIVIDUALSREQUEST
DESCRIPTOR.message_types_by_name['GetIndividualRequest'] = _GETINDIVIDUALREQUEST
DESCRIPTOR.message_types_by_name['GetBioSampleRequest'] = _GETBIOSAMPLEREQUEST
DESCRIPTOR.message_types_by_name['SearchIndividualsResponse'] = _SEARCHINDIVIDUALSRESPONSE
DESCRIPTOR.message_types_by_name['SearchBioSamplesRequest'] = _SEARCHBIOSAMPLESREQUEST
DESCRIPTOR.message_types_by_name['SearchBioSamplesResponse'] = _SEARCHBIOSAMPLESRESPONSE

SearchIndividualsRequest = _reflection.GeneratedProtocolMessageType('SearchIndividualsRequest', (_message.Message,), dict(
  DESCRIPTOR = _SEARCHINDIVIDUALSREQUEST,
  __module__ = 'ga4gh.bio_metadata_service_pb2'
  # @@protoc_insertion_point(class_scope:ga4gh.SearchIndividualsRequest)
  ))
_sym_db.RegisterMessage(SearchIndividualsRequest)

GetIndividualRequest = _reflection.GeneratedProtocolMessageType('GetIndividualRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETINDIVIDUALREQUEST,
  __module__ = 'ga4gh.bio_metadata_service_pb2'
  # @@protoc_insertion_point(class_scope:ga4gh.GetIndividualRequest)
  ))
_sym_db.RegisterMessage(GetIndividualRequest)

GetBioSampleRequest = _reflection.GeneratedProtocolMessageType('GetBioSampleRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETBIOSAMPLEREQUEST,
  __module__ = 'ga4gh.bio_metadata_service_pb2'
  # @@protoc_insertion_point(class_scope:ga4gh.GetBioSampleRequest)
  ))
_sym_db.RegisterMessage(GetBioSampleRequest)

SearchIndividualsResponse = _reflection.GeneratedProtocolMessageType('SearchIndividualsResponse', (_message.Message,), dict(
  DESCRIPTOR = _SEARCHINDIVIDUALSRESPONSE,
  __module__ = 'ga4gh.bio_metadata_service_pb2'
  # @@protoc_insertion_point(class_scope:ga4gh.SearchIndividualsResponse)
  ))
_sym_db.RegisterMessage(SearchIndividualsResponse)

SearchBioSamplesRequest = _reflection.GeneratedProtocolMessageType('SearchBioSamplesRequest', (_message.Message,), dict(
  DESCRIPTOR = _SEARCHBIOSAMPLESREQUEST,
  __module__ = 'ga4gh.bio_metadata_service_pb2'
  # @@protoc_insertion_point(class_scope:ga4gh.SearchBioSamplesRequest)
  ))
_sym_db.RegisterMessage(SearchBioSamplesRequest)

SearchBioSamplesResponse = _reflection.GeneratedProtocolMessageType('SearchBioSamplesResponse', (_message.Message,), dict(
  DESCRIPTOR = _SEARCHBIOSAMPLESRESPONSE,
  __module__ = 'ga4gh.bio_metadata_service_pb2'
  # @@protoc_insertion_point(class_scope:ga4gh.SearchBioSamplesResponse)
  ))
_sym_db.RegisterMessage(SearchBioSamplesResponse)


import grpc
from grpc.beta import implementations as beta_implementations
from grpc.beta import interfaces as beta_interfaces
from grpc.framework.common import cardinality
from grpc.framework.interfaces.face import utilities as face_utilities


class BioMetadataServiceStub(object):

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.SearchIndividuals = channel.unary_unary(
        '/ga4gh.BioMetadataService/SearchIndividuals',
        request_serializer=SearchIndividualsRequest.SerializeToString,
        response_deserializer=SearchIndividualsResponse.FromString,
        )
    self.SearchBioSamples = channel.unary_unary(
        '/ga4gh.BioMetadataService/SearchBioSamples',
        request_serializer=SearchBioSamplesRequest.SerializeToString,
        response_deserializer=SearchBioSamplesResponse.FromString,
        )
    self.GetIndividual = channel.unary_unary(
        '/ga4gh.BioMetadataService/GetIndividual',
        request_serializer=GetIndividualRequest.SerializeToString,
        response_deserializer=ga4gh_dot_bio__metadata__pb2.Individual.FromString,
        )
    self.GetBioSample = channel.unary_unary(
        '/ga4gh.BioMetadataService/GetBioSample',
        request_serializer=GetBioSampleRequest.SerializeToString,
        response_deserializer=ga4gh_dot_bio__metadata__pb2.BioSample.FromString,
        )


class BioMetadataServiceServicer(object):

  def SearchIndividuals(self, request, context):
    """Gets a list of Individuals accessible through the API.
    `POST /individuals/search` must accept a JSON version of
    `SearchIndividualsRequest` as the post body and will return a JSON version
    of `SearchIndividualsResponse`.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SearchBioSamples(self, request, context):
    """`POST /biosamples/search` must accept a JSON version of
    `SearchBioSamplesRequest` as the post body and will return a JSON version
    of `SearchBioSamplesResponse`.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetIndividual(self, request, context):
    """Gets an `Individual` by ID.
    `GET /individuals/{id}` will return a JSON version of `Individual`.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetBioSample(self, request, context):
    """Gets a `BioSample` by ID.
    `GET /biosamples/{id}` will return a JSON version of `BioSample`.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_BioMetadataServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'SearchIndividuals': grpc.unary_unary_rpc_method_handler(
          servicer.SearchIndividuals,
          request_deserializer=SearchIndividualsRequest.FromString,
          response_serializer=SearchIndividualsResponse.SerializeToString,
      ),
      'SearchBioSamples': grpc.unary_unary_rpc_method_handler(
          servicer.SearchBioSamples,
          request_deserializer=SearchBioSamplesRequest.FromString,
          response_serializer=SearchBioSamplesResponse.SerializeToString,
      ),
      'GetIndividual': grpc.unary_unary_rpc_method_handler(
          servicer.GetIndividual,
          request_deserializer=GetIndividualRequest.FromString,
          response_serializer=ga4gh_dot_bio__metadata__pb2.Individual.SerializeToString,
      ),
      'GetBioSample': grpc.unary_unary_rpc_method_handler(
          servicer.GetBioSample,
          request_deserializer=GetBioSampleRequest.FromString,
          response_serializer=ga4gh_dot_bio__metadata__pb2.BioSample.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'ga4gh.BioMetadataService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class BetaBioMetadataServiceServicer(object):
  def SearchIndividuals(self, request, context):
    """Gets a list of Individuals accessible through the API.
    `POST /individuals/search` must accept a JSON version of
    `SearchIndividualsRequest` as the post body and will return a JSON version
    of `SearchIndividualsResponse`.
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def SearchBioSamples(self, request, context):
    """`POST /biosamples/search` must accept a JSON version of
    `SearchBioSamplesRequest` as the post body and will return a JSON version
    of `SearchBioSamplesResponse`.
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def GetIndividual(self, request, context):
    """Gets an `Individual` by ID.
    `GET /individuals/{id}` will return a JSON version of `Individual`.
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def GetBioSample(self, request, context):
    """Gets a `BioSample` by ID.
    `GET /biosamples/{id}` will return a JSON version of `BioSample`.
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


class BetaBioMetadataServiceStub(object):
  def SearchIndividuals(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    """Gets a list of Individuals accessible through the API.
    `POST /individuals/search` must accept a JSON version of
    `SearchIndividualsRequest` as the post body and will return a JSON version
    of `SearchIndividualsResponse`.
    """
    raise NotImplementedError()
  SearchIndividuals.future = None
  def SearchBioSamples(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    """`POST /biosamples/search` must accept a JSON version of
    `SearchBioSamplesRequest` as the post body and will return a JSON version
    of `SearchBioSamplesResponse`.
    """
    raise NotImplementedError()
  SearchBioSamples.future = None
  def GetIndividual(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    """Gets an `Individual` by ID.
    `GET /individuals/{id}` will return a JSON version of `Individual`.
    """
    raise NotImplementedError()
  GetIndividual.future = None
  def GetBioSample(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    """Gets a `BioSample` by ID.
    `GET /biosamples/{id}` will return a JSON version of `BioSample`.
    """
    raise NotImplementedError()
  GetBioSample.future = None


def beta_create_BioMetadataService_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
  request_deserializers = {
    ('ga4gh.BioMetadataService', 'GetBioSample'): GetBioSampleRequest.FromString,
    ('ga4gh.BioMetadataService', 'GetIndividual'): GetIndividualRequest.FromString,
    ('ga4gh.BioMetadataService', 'SearchBioSamples'): SearchBioSamplesRequest.FromString,
    ('ga4gh.BioMetadataService', 'SearchIndividuals'): SearchIndividualsRequest.FromString,
  }
  response_serializers = {
    ('ga4gh.BioMetadataService', 'GetBioSample'): ga4gh_dot_bio__metadata__pb2.BioSample.SerializeToString,
    ('ga4gh.BioMetadataService', 'GetIndividual'): ga4gh_dot_bio__metadata__pb2.Individual.SerializeToString,
    ('ga4gh.BioMetadataService', 'SearchBioSamples'): SearchBioSamplesResponse.SerializeToString,
    ('ga4gh.BioMetadataService', 'SearchIndividuals'): SearchIndividualsResponse.SerializeToString,
  }
  method_implementations = {
    ('ga4gh.BioMetadataService', 'GetBioSample'): face_utilities.unary_unary_inline(servicer.GetBioSample),
    ('ga4gh.BioMetadataService', 'GetIndividual'): face_utilities.unary_unary_inline(servicer.GetIndividual),
    ('ga4gh.BioMetadataService', 'SearchBioSamples'): face_utilities.unary_unary_inline(servicer.SearchBioSamples),
    ('ga4gh.BioMetadataService', 'SearchIndividuals'): face_utilities.unary_unary_inline(servicer.SearchIndividuals),
  }
  server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
  return beta_implementations.server(method_implementations, options=server_options)


def beta_create_BioMetadataService_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
  request_serializers = {
    ('ga4gh.BioMetadataService', 'GetBioSample'): GetBioSampleRequest.SerializeToString,
    ('ga4gh.BioMetadataService', 'GetIndividual'): GetIndividualRequest.SerializeToString,
    ('ga4gh.BioMetadataService', 'SearchBioSamples'): SearchBioSamplesRequest.SerializeToString,
    ('ga4gh.BioMetadataService', 'SearchIndividuals'): SearchIndividualsRequest.SerializeToString,
  }
  response_deserializers = {
    ('ga4gh.BioMetadataService', 'GetBioSample'): ga4gh_dot_bio__metadata__pb2.BioSample.FromString,
    ('ga4gh.BioMetadataService', 'GetIndividual'): ga4gh_dot_bio__metadata__pb2.Individual.FromString,
    ('ga4gh.BioMetadataService', 'SearchBioSamples'): SearchBioSamplesResponse.FromString,
    ('ga4gh.BioMetadataService', 'SearchIndividuals'): SearchIndividualsResponse.FromString,
  }
  cardinalities = {
    'GetBioSample': cardinality.Cardinality.UNARY_UNARY,
    'GetIndividual': cardinality.Cardinality.UNARY_UNARY,
    'SearchBioSamples': cardinality.Cardinality.UNARY_UNARY,
    'SearchIndividuals': cardinality.Cardinality.UNARY_UNARY,
  }
  stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
  return beta_implementations.dynamic_stub(channel, 'ga4gh.BioMetadataService', cardinalities, options=stub_options)
# @@protoc_insertion_point(module_scope)
