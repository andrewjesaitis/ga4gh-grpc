# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ga4gh/allele_annotation_service.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from ga4gh import allele_annotations_pb2 as ga4gh_dot_allele__annotations__pb2
from ga4gh import metadata_pb2 as ga4gh_dot_metadata__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='ga4gh/allele_annotation_service.proto',
  package='ga4gh',
  syntax='proto3',
  serialized_pb=_b('\n%ga4gh/allele_annotation_service.proto\x12\x05ga4gh\x1a\x1ega4gh/allele_annotations.proto\x1a\x14ga4gh/metadata.proto\"\xdb\x01\n\x1fSearchVariantAnnotationsRequest\x12!\n\x19variant_annotation_set_id\x18\x01 \x01(\t\x12\x16\n\x0ereference_name\x18\x02 \x01(\t\x12\x14\n\x0creference_id\x18\x03 \x01(\t\x12\r\n\x05start\x18\x04 \x01(\x03\x12\x0b\n\x03\x65nd\x18\x05 \x01(\x03\x12$\n\x07\x65\x66\x66\x65\x63ts\x18\x06 \x03(\x0b\x32\x13.ga4gh.OntologyTerm\x12\x11\n\tpage_size\x18\x07 \x01(\x05\x12\x12\n\npage_token\x18\x08 \x01(\t\"r\n SearchVariantAnnotationsResponse\x12\x35\n\x13variant_annotations\x18\x01 \x03(\x0b\x32\x18.ga4gh.VariantAnnotation\x12\x17\n\x0fnext_page_token\x18\x02 \x01(\t\"c\n\"SearchVariantAnnotationSetsRequest\x12\x16\n\x0evariant_set_id\x18\x01 \x01(\t\x12\x11\n\tpage_size\x18\x02 \x01(\x05\x12\x12\n\npage_token\x18\x03 \x01(\t\"|\n#SearchVariantAnnotationSetsResponse\x12<\n\x17variant_annotation_sets\x18\x01 \x03(\x0b\x32\x1b.ga4gh.VariantAnnotationSet\x12\x17\n\x0fnext_page_token\x18\x02 \x01(\t\"C\n\x1eGetVariantAnnotationSetRequest\x12!\n\x19variant_annotation_set_id\x18\x01 \x01(\t2\xdb\x02\n\x17\x41lleleAnnotationService\x12k\n\x18SearchVariantAnnotations\x12&.ga4gh.SearchVariantAnnotationsRequest\x1a\'.ga4gh.SearchVariantAnnotationsResponse\x12t\n\x1bSearchVariantAnnotationSets\x12).ga4gh.SearchVariantAnnotationSetsRequest\x1a*.ga4gh.SearchVariantAnnotationSetsResponse\x12]\n\x17GetVariantAnnotationSet\x12%.ga4gh.GetVariantAnnotationSetRequest\x1a\x1b.ga4gh.VariantAnnotationSetb\x06proto3')
  ,
  dependencies=[ga4gh_dot_allele__annotations__pb2.DESCRIPTOR,ga4gh_dot_metadata__pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_SEARCHVARIANTANNOTATIONSREQUEST = _descriptor.Descriptor(
  name='SearchVariantAnnotationsRequest',
  full_name='ga4gh.SearchVariantAnnotationsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='variant_annotation_set_id', full_name='ga4gh.SearchVariantAnnotationsRequest.variant_annotation_set_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='reference_name', full_name='ga4gh.SearchVariantAnnotationsRequest.reference_name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='reference_id', full_name='ga4gh.SearchVariantAnnotationsRequest.reference_id', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='start', full_name='ga4gh.SearchVariantAnnotationsRequest.start', index=3,
      number=4, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='end', full_name='ga4gh.SearchVariantAnnotationsRequest.end', index=4,
      number=5, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='effects', full_name='ga4gh.SearchVariantAnnotationsRequest.effects', index=5,
      number=6, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='page_size', full_name='ga4gh.SearchVariantAnnotationsRequest.page_size', index=6,
      number=7, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='page_token', full_name='ga4gh.SearchVariantAnnotationsRequest.page_token', index=7,
      number=8, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=103,
  serialized_end=322,
)


_SEARCHVARIANTANNOTATIONSRESPONSE = _descriptor.Descriptor(
  name='SearchVariantAnnotationsResponse',
  full_name='ga4gh.SearchVariantAnnotationsResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='variant_annotations', full_name='ga4gh.SearchVariantAnnotationsResponse.variant_annotations', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='next_page_token', full_name='ga4gh.SearchVariantAnnotationsResponse.next_page_token', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=324,
  serialized_end=438,
)


_SEARCHVARIANTANNOTATIONSETSREQUEST = _descriptor.Descriptor(
  name='SearchVariantAnnotationSetsRequest',
  full_name='ga4gh.SearchVariantAnnotationSetsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='variant_set_id', full_name='ga4gh.SearchVariantAnnotationSetsRequest.variant_set_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='page_size', full_name='ga4gh.SearchVariantAnnotationSetsRequest.page_size', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='page_token', full_name='ga4gh.SearchVariantAnnotationSetsRequest.page_token', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=440,
  serialized_end=539,
)


_SEARCHVARIANTANNOTATIONSETSRESPONSE = _descriptor.Descriptor(
  name='SearchVariantAnnotationSetsResponse',
  full_name='ga4gh.SearchVariantAnnotationSetsResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='variant_annotation_sets', full_name='ga4gh.SearchVariantAnnotationSetsResponse.variant_annotation_sets', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='next_page_token', full_name='ga4gh.SearchVariantAnnotationSetsResponse.next_page_token', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=541,
  serialized_end=665,
)


_GETVARIANTANNOTATIONSETREQUEST = _descriptor.Descriptor(
  name='GetVariantAnnotationSetRequest',
  full_name='ga4gh.GetVariantAnnotationSetRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='variant_annotation_set_id', full_name='ga4gh.GetVariantAnnotationSetRequest.variant_annotation_set_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=667,
  serialized_end=734,
)

_SEARCHVARIANTANNOTATIONSREQUEST.fields_by_name['effects'].message_type = ga4gh_dot_metadata__pb2._ONTOLOGYTERM
_SEARCHVARIANTANNOTATIONSRESPONSE.fields_by_name['variant_annotations'].message_type = ga4gh_dot_allele__annotations__pb2._VARIANTANNOTATION
_SEARCHVARIANTANNOTATIONSETSRESPONSE.fields_by_name['variant_annotation_sets'].message_type = ga4gh_dot_allele__annotations__pb2._VARIANTANNOTATIONSET
DESCRIPTOR.message_types_by_name['SearchVariantAnnotationsRequest'] = _SEARCHVARIANTANNOTATIONSREQUEST
DESCRIPTOR.message_types_by_name['SearchVariantAnnotationsResponse'] = _SEARCHVARIANTANNOTATIONSRESPONSE
DESCRIPTOR.message_types_by_name['SearchVariantAnnotationSetsRequest'] = _SEARCHVARIANTANNOTATIONSETSREQUEST
DESCRIPTOR.message_types_by_name['SearchVariantAnnotationSetsResponse'] = _SEARCHVARIANTANNOTATIONSETSRESPONSE
DESCRIPTOR.message_types_by_name['GetVariantAnnotationSetRequest'] = _GETVARIANTANNOTATIONSETREQUEST

SearchVariantAnnotationsRequest = _reflection.GeneratedProtocolMessageType('SearchVariantAnnotationsRequest', (_message.Message,), dict(
  DESCRIPTOR = _SEARCHVARIANTANNOTATIONSREQUEST,
  __module__ = 'ga4gh.allele_annotation_service_pb2'
  # @@protoc_insertion_point(class_scope:ga4gh.SearchVariantAnnotationsRequest)
  ))
_sym_db.RegisterMessage(SearchVariantAnnotationsRequest)

SearchVariantAnnotationsResponse = _reflection.GeneratedProtocolMessageType('SearchVariantAnnotationsResponse', (_message.Message,), dict(
  DESCRIPTOR = _SEARCHVARIANTANNOTATIONSRESPONSE,
  __module__ = 'ga4gh.allele_annotation_service_pb2'
  # @@protoc_insertion_point(class_scope:ga4gh.SearchVariantAnnotationsResponse)
  ))
_sym_db.RegisterMessage(SearchVariantAnnotationsResponse)

SearchVariantAnnotationSetsRequest = _reflection.GeneratedProtocolMessageType('SearchVariantAnnotationSetsRequest', (_message.Message,), dict(
  DESCRIPTOR = _SEARCHVARIANTANNOTATIONSETSREQUEST,
  __module__ = 'ga4gh.allele_annotation_service_pb2'
  # @@protoc_insertion_point(class_scope:ga4gh.SearchVariantAnnotationSetsRequest)
  ))
_sym_db.RegisterMessage(SearchVariantAnnotationSetsRequest)

SearchVariantAnnotationSetsResponse = _reflection.GeneratedProtocolMessageType('SearchVariantAnnotationSetsResponse', (_message.Message,), dict(
  DESCRIPTOR = _SEARCHVARIANTANNOTATIONSETSRESPONSE,
  __module__ = 'ga4gh.allele_annotation_service_pb2'
  # @@protoc_insertion_point(class_scope:ga4gh.SearchVariantAnnotationSetsResponse)
  ))
_sym_db.RegisterMessage(SearchVariantAnnotationSetsResponse)

GetVariantAnnotationSetRequest = _reflection.GeneratedProtocolMessageType('GetVariantAnnotationSetRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETVARIANTANNOTATIONSETREQUEST,
  __module__ = 'ga4gh.allele_annotation_service_pb2'
  # @@protoc_insertion_point(class_scope:ga4gh.GetVariantAnnotationSetRequest)
  ))
_sym_db.RegisterMessage(GetVariantAnnotationSetRequest)


import abc
import six
from grpc.beta import implementations as beta_implementations
from grpc.beta import interfaces as beta_interfaces
from grpc.framework.common import cardinality
from grpc.framework.interfaces.face import utilities as face_utilities

class BetaAlleleAnnotationServiceServicer(object):
  def SearchVariantAnnotations(self, request, context):
    """Gets a list of `VariantAnnotation`s matching the search criteria.

    This allows the mining of allele-specific annotations on a VariantSet by
    either a region or by a set of genomic features. Where a region is supplied
    annotation of all alleles vs all features in the region is returned. Where
    a set of features is supplied, only annotations against these features
    (matching on featuretype and id) are returned and other overlapping
    features are ignored.

    variantannotationsets/search returns information on the input to the
    annotation. This will be a VariantSet and the reference data and software
    versions used in calculating the annotation. It is essential this
    information is exhaustive.

    `POST /variantannotations/search` must accept a JSON version of
    `SearchVariantAnnotationsRequest` as the post body and will return a JSON
    version of `SearchVariantAnnotationsResponse`.
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def SearchVariantAnnotationSets(self, request, context):
    """Returns a list of available variant annotation sets.

    `POST /variantannotationsets/search` must accept a JSON version of
    `SearchVariantAnnotationSetsRequest` as the post body and will return a
    JSON version of `SearchVariantAnnotationSetsResponse`.
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def GetVariantAnnotationSet(self, request, context):
    """Gets an `VariantAnnotationSet` by ID.

    `GET /variantannotationsets/{variant_annotation_set_id}` will return a JSON
    version of `VariantAnnotationSet`.
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)

class BetaAlleleAnnotationServiceStub(object):
  def SearchVariantAnnotations(self, request, timeout):
    """Gets a list of `VariantAnnotation`s matching the search criteria.

    This allows the mining of allele-specific annotations on a VariantSet by
    either a region or by a set of genomic features. Where a region is supplied
    annotation of all alleles vs all features in the region is returned. Where
    a set of features is supplied, only annotations against these features
    (matching on featuretype and id) are returned and other overlapping
    features are ignored.

    variantannotationsets/search returns information on the input to the
    annotation. This will be a VariantSet and the reference data and software
    versions used in calculating the annotation. It is essential this
    information is exhaustive.

    `POST /variantannotations/search` must accept a JSON version of
    `SearchVariantAnnotationsRequest` as the post body and will return a JSON
    version of `SearchVariantAnnotationsResponse`.
    """
    raise NotImplementedError()
  SearchVariantAnnotations.future = None
  def SearchVariantAnnotationSets(self, request, timeout):
    """Returns a list of available variant annotation sets.

    `POST /variantannotationsets/search` must accept a JSON version of
    `SearchVariantAnnotationSetsRequest` as the post body and will return a
    JSON version of `SearchVariantAnnotationSetsResponse`.
    """
    raise NotImplementedError()
  SearchVariantAnnotationSets.future = None
  def GetVariantAnnotationSet(self, request, timeout):
    """Gets an `VariantAnnotationSet` by ID.

    `GET /variantannotationsets/{variant_annotation_set_id}` will return a JSON
    version of `VariantAnnotationSet`.
    """
    raise NotImplementedError()
  GetVariantAnnotationSet.future = None

def beta_create_AlleleAnnotationService_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
  import ga4gh.allele_annotation_service_pb2
  import ga4gh.allele_annotation_service_pb2
  import ga4gh.allele_annotation_service_pb2
  import ga4gh.allele_annotation_service_pb2
  import ga4gh.allele_annotation_service_pb2
  import ga4gh.allele_annotations_pb2
  request_deserializers = {
    ('ga4gh.AlleleAnnotationService', 'GetVariantAnnotationSet'): ga4gh.allele_annotation_service_pb2.GetVariantAnnotationSetRequest.FromString,
    ('ga4gh.AlleleAnnotationService', 'SearchVariantAnnotationSets'): ga4gh.allele_annotation_service_pb2.SearchVariantAnnotationSetsRequest.FromString,
    ('ga4gh.AlleleAnnotationService', 'SearchVariantAnnotations'): ga4gh.allele_annotation_service_pb2.SearchVariantAnnotationsRequest.FromString,
  }
  response_serializers = {
    ('ga4gh.AlleleAnnotationService', 'GetVariantAnnotationSet'): ga4gh.allele_annotations_pb2.VariantAnnotationSet.SerializeToString,
    ('ga4gh.AlleleAnnotationService', 'SearchVariantAnnotationSets'): ga4gh.allele_annotation_service_pb2.SearchVariantAnnotationSetsResponse.SerializeToString,
    ('ga4gh.AlleleAnnotationService', 'SearchVariantAnnotations'): ga4gh.allele_annotation_service_pb2.SearchVariantAnnotationsResponse.SerializeToString,
  }
  method_implementations = {
    ('ga4gh.AlleleAnnotationService', 'GetVariantAnnotationSet'): face_utilities.unary_unary_inline(servicer.GetVariantAnnotationSet),
    ('ga4gh.AlleleAnnotationService', 'SearchVariantAnnotationSets'): face_utilities.unary_unary_inline(servicer.SearchVariantAnnotationSets),
    ('ga4gh.AlleleAnnotationService', 'SearchVariantAnnotations'): face_utilities.unary_unary_inline(servicer.SearchVariantAnnotations),
  }
  server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
  return beta_implementations.server(method_implementations, options=server_options)

def beta_create_AlleleAnnotationService_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
  import ga4gh.allele_annotation_service_pb2
  import ga4gh.allele_annotation_service_pb2
  import ga4gh.allele_annotation_service_pb2
  import ga4gh.allele_annotation_service_pb2
  import ga4gh.allele_annotation_service_pb2
  import ga4gh.allele_annotations_pb2
  request_serializers = {
    ('ga4gh.AlleleAnnotationService', 'GetVariantAnnotationSet'): ga4gh.allele_annotation_service_pb2.GetVariantAnnotationSetRequest.SerializeToString,
    ('ga4gh.AlleleAnnotationService', 'SearchVariantAnnotationSets'): ga4gh.allele_annotation_service_pb2.SearchVariantAnnotationSetsRequest.SerializeToString,
    ('ga4gh.AlleleAnnotationService', 'SearchVariantAnnotations'): ga4gh.allele_annotation_service_pb2.SearchVariantAnnotationsRequest.SerializeToString,
  }
  response_deserializers = {
    ('ga4gh.AlleleAnnotationService', 'GetVariantAnnotationSet'): ga4gh.allele_annotations_pb2.VariantAnnotationSet.FromString,
    ('ga4gh.AlleleAnnotationService', 'SearchVariantAnnotationSets'): ga4gh.allele_annotation_service_pb2.SearchVariantAnnotationSetsResponse.FromString,
    ('ga4gh.AlleleAnnotationService', 'SearchVariantAnnotations'): ga4gh.allele_annotation_service_pb2.SearchVariantAnnotationsResponse.FromString,
  }
  cardinalities = {
    'GetVariantAnnotationSet': cardinality.Cardinality.UNARY_UNARY,
    'SearchVariantAnnotationSets': cardinality.Cardinality.UNARY_UNARY,
    'SearchVariantAnnotations': cardinality.Cardinality.UNARY_UNARY,
  }
  stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
  return beta_implementations.dynamic_stub(channel, 'ga4gh.AlleleAnnotationService', cardinalities, options=stub_options)
# @@protoc_insertion_point(module_scope)
